package gui;

import algorithms.CompleteGraphFinder;
import algorithms.TimeseriesToGraph;
import datastructures.graphs.AdjacencyList;
import datastructures.graphs.CompleteSubgraph;
import datastructures.vo.Threshold;
import datastructures.vo.ThresholdAbsoluteValue;
import datastructures.vo.ThresholdPercentage;
import datastructures.vo.ThresholdType;
import inout.MyReader;
import inout.MyWriter;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.math.NumberUtils;
import utils.SimilarityDefinitions;
import vo.Summary;
import java.nio.file.Paths;
import java.nio.file.Path;
import org.apache.commons.cli.*;

public class MainFrame extends javax.swing.JFrame {
    // Inputs
    private File[] selectedFiles;
    private Double prosent;
    private Integer absoluteValue;
    private Integer cliqueSize;
    private Integer antNaboerEnvei;

    // Output
    private final List<Threshold> thresholds;
    private final List<List<Integer>> timeSeriesList;
    private final List<TimeseriesToGraph> algorithims;

    /**
     * Creates new form MainFrame2
     */
    public MainFrame() {
        initComponents();
        lagResultatfilButton.setEnabled(false);
        nettverkStatistikkButton.setEnabled(false);
        tabularFileButton.setEnabled(false);

        // Init lists
        timeSeriesList = new ArrayList<>();
        algorithims = new ArrayList<>();
        thresholds = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        visibilityGraphtabbedPane = new javax.swing.JTabbedPane();
        noderPanel = new javax.swing.JPanel();
        valgtFilTextField = new javax.swing.JTextField();
        velgInputfilButton = new javax.swing.JButton();
        beregnButton = new javax.swing.JButton();
        prosentLabel = new javax.swing.JLabel();
        prosentTextField = new javax.swing.JTextField();
        resultaterPanel = new javax.swing.JPanel();
        antallNoderLabel = new javax.swing.JLabel();
        antallNoderTextField = new javax.swing.JTextField();
        gjennomsnittLabel = new javax.swing.JLabel();
        gjennomsnitttextField = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        numConnectedComponentsLabel = new javax.swing.JLabel();
        numConnectedComponentsTextField = new javax.swing.JTextField();
        numBridgesLabel = new javax.swing.JLabel();
        numBridgesTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        numMissingDirectRelationshipsTextField = new javax.swing.JTextField();
        numCliquesLabel = new javax.swing.JLabel();
        numCliquesTextField = new javax.swing.JTextField();
        outputPanel = new javax.swing.JPanel();
        lagResultatfilButton = new javax.swing.JButton();
        nettverkStatistikkButton = new javax.swing.JButton();
        tabularFileButton = new javax.swing.JButton();
        antNaboerEnVeiLabel = new javax.swing.JLabel();
        antNaboerEnVeiTextField = new javax.swing.JTextField();
        statusNettverkLabel = new javax.swing.JLabel();
        cliqueSizeLabel = new javax.swing.JLabel();
        cliqueSizeTextField = new javax.swing.JTextField();
        nettverkNullstillButton = new javax.swing.JButton();
        absoluttverdiLabel = new javax.swing.JLabel();
        absoluttverdiTextField = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        jButton1.setText("jButton1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        valgtFilTextField.setEditable(false);

        velgInputfilButton.setText("Choose file(s)");
        velgInputfilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                velgInputfilButtonActionPerformed(evt);
            }
        });

        beregnButton.setText("Calculate");
        beregnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beregnButtonActionPerformed(evt);
            }
        });

        prosentLabel.setText("Similarity threshold percent");

        prosentTextField.setText("1.5");
        prosentTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prosentTextFieldActionPerformed(evt);
            }
        });

        resultaterPanel.setBorder(BorderFactory.createTitledBorder("Results"));

        antallNoderLabel.setText("Number of nodes");

        antallNoderTextField.setEditable(false);

        gjennomsnittLabel.setText("Average number of edges");

        gjennomsnitttextField.setEditable(false);
        gjennomsnitttextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gjennomsnitttextFieldActionPerformed(evt);
            }
        });

        numConnectedComponentsLabel.setText("Number of connected components");

        numConnectedComponentsTextField.setEditable(false);

        numBridgesLabel.setText("Number of bridges");

        numBridgesTextField.setEditable(false);

        jLabel2.setText("Number of missing edges between direct neighbors");

        numMissingDirectRelationshipsTextField.setEditable(false);

        numCliquesLabel.setText("Number of cliques");

        numCliquesTextField.setEditable(false);

        javax.swing.GroupLayout resultaterPanelLayout = new javax.swing.GroupLayout(resultaterPanel);
        resultaterPanel.setLayout(resultaterPanelLayout);
        resultaterPanelLayout.setHorizontalGroup(
                resultaterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(resultaterPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(statusLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(resultaterPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(antallNoderLabel)
                                        .addComponent(gjennomsnittLabel)
                                        .addComponent(numConnectedComponentsLabel)
                                        .addComponent(numBridgesLabel)
                                        .addComponent(jLabel2)
                                        .addComponent(numCliquesLabel))
                                .addGap(12, 12, 12)
                                .addGroup(resultaterPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(antallNoderTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 275,
                                                Short.MAX_VALUE)
                                        .addComponent(gjennomsnitttextField, javax.swing.GroupLayout.DEFAULT_SIZE, 275,
                                                Short.MAX_VALUE)
                                        .addComponent(numConnectedComponentsTextField,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                        .addComponent(numBridgesTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 275,
                                                Short.MAX_VALUE)
                                        .addComponent(numMissingDirectRelationshipsTextField,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                        .addComponent(numCliquesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 302,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(7, Short.MAX_VALUE)));

        resultaterPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
                new java.awt.Component[] { antallNoderLabel, antallNoderTextField, gjennomsnittLabel,
                        gjennomsnitttextField, jLabel2, numBridgesLabel, numBridgesTextField,
                        numConnectedComponentsLabel, numConnectedComponentsTextField,
                        numMissingDirectRelationshipsTextField });

        resultaterPanelLayout.setVerticalGroup(
                resultaterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(resultaterPanelLayout.createSequentialGroup()
                                .addGroup(resultaterPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(resultaterPanelLayout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(statusLabel))
                                        .addGroup(resultaterPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(antallNoderLabel)
                                                        .addComponent(antallNoderTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(gjennomsnitttextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(gjennomsnittLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numConnectedComponentsTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(numConnectedComponentsLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numBridgesTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(numBridgesLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numMissingDirectRelationshipsTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(resultaterPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(numCliquesLabel)
                                                        .addComponent(numCliquesTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        outputPanel.setBorder(BorderFactory.createTitledBorder("Output"));

        lagResultatfilButton.setText("Results files");
        lagResultatfilButton.setToolTipText("");
        lagResultatfilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lagResultatfilButtonActionPerformed(evt);
            }
        });

        nettverkStatistikkButton.setText("Statistics files");
        nettverkStatistikkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nettverkStatistikkButtonActionPerformed(evt);
            }
        });

        tabularFileButton.setText("Tabular file");
        tabularFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabularFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
                outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(outputPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lagResultatfilButton)
                                                .addComponent(nettverkStatistikkButton)
                                                .addComponent(tabularFileButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        outputPanelLayout.setVerticalGroup(
                outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(outputPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lagResultatfilButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nettverkStatistikkButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tabularFileButton)
                                .addContainerGap(14, Short.MAX_VALUE)));

        antNaboerEnVeiLabel.setText("Num neighbors one way");

        antNaboerEnVeiTextField.setText("2");

        statusNettverkLabel.setBackground(new java.awt.Color(255, 255, 255));
        statusNettverkLabel.setOpaque(true);

        cliqueSizeLabel.setText("Clique size");

        cliqueSizeTextField.setText("3");

        nettverkNullstillButton.setText("Reset");
        nettverkNullstillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nettverkNullstillButtonActionPerformed(evt);
            }
        });

        absoluttverdiLabel.setText("Similarity threshold absolute");

        javax.swing.GroupLayout noderPanelLayout = new javax.swing.GroupLayout(noderPanel);
        noderPanel.setLayout(noderPanelLayout);
        noderPanelLayout.setHorizontalGroup(
                noderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(noderPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(statusNettverkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(noderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(noderPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(resultaterPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(noderPanelLayout.createSequentialGroup()
                                                .addGroup(noderPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(noderPanelLayout.createSequentialGroup()
                                                                .addGroup(noderPanelLayout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(antNaboerEnVeiLabel)
                                                                        .addComponent(prosentLabel)
                                                                        .addComponent(velgInputfilButton))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(noderPanelLayout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(valgtFilTextField)
                                                                        .addGroup(noderPanelLayout
                                                                                .createSequentialGroup()
                                                                                .addGroup(noderPanelLayout
                                                                                        .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                                false)
                                                                                        .addComponent(
                                                                                                cliqueSizeTextField)
                                                                                        .addComponent(prosentTextField,
                                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                135, Short.MAX_VALUE)
                                                                                        .addComponent(
                                                                                                antNaboerEnVeiTextField,
                                                                                                javax.swing.GroupLayout.Alignment.LEADING))
                                                                                .addPreferredGap(
                                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(noderPanelLayout
                                                                                        .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(noderPanelLayout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(
                                                                                                        absoluttverdiLabel)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(
                                                                                                        absoluttverdiTextField,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        128,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addGap(0, 0,
                                                                                                        Short.MAX_VALUE))
                                                                                        .addGroup(noderPanelLayout
                                                                                                .createSequentialGroup()
                                                                                                .addGap(0, 0,
                                                                                                        Short.MAX_VALUE)
                                                                                                .addComponent(
                                                                                                        outputPanel,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                                        .addGroup(noderPanelLayout.createSequentialGroup()
                                                                .addGroup(noderPanelLayout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(cliqueSizeLabel)
                                                                        .addGroup(noderPanelLayout
                                                                                .createSequentialGroup()
                                                                                .addComponent(beregnButton)
                                                                                .addPreferredGap(
                                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(nettverkNullstillButton)))
                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                .addGap(6, 6, 6)))));
        noderPanelLayout.setVerticalGroup(
                noderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(noderPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(
                                        noderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(valgtFilTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(velgInputfilButton))
                                .addGap(1, 1, 1)
                                .addGroup(noderPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(prosentLabel)
                                        .addComponent(prosentTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(absoluttverdiLabel)
                                        .addComponent(absoluttverdiTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(noderPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(noderPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(noderPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(antNaboerEnVeiTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(antNaboerEnVeiLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(noderPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(cliqueSizeLabel)
                                                        .addComponent(cliqueSizeTextField,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34,
                                                        Short.MAX_VALUE)
                                                .addGroup(noderPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(beregnButton)
                                                        .addComponent(nettverkNullstillButton))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(statusNettverkLabel,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12))
                                        .addGroup(noderPanelLayout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(resultaterPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)));

        visibilityGraphtabbedPane.addTab("Similarity Graph", noderPanel);

        getContentPane().add(visibilityGraphtabbedPane,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));
        visibilityGraphtabbedPane.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nettverkStatistikkButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nettverkStatistikkButtonActionPerformed
        if (inputIsOK()) {
            for (int i = 0; i < selectedFiles.length; i++) {
                File file = selectedFiles[i];
                TimeseriesToGraph algorithim = algorithims.get(i);
                Threshold threshold = thresholds.get(i);

                final Map<Integer, Summary> antNaboerTilSummary = algorithim.getNumNeighborsToSummary();
                final List<BigDecimal> localClusteringCoefficients = algorithim.getLocalClusteringCoefficients();

                final int antNaboerEnVei = Integer.parseInt(antNaboerEnVeiTextField.getText());
                final String fileName = getNettverkStatistikkUtdataFilnavn(file, antNaboerEnVei, threshold); // threshold

                boolean settings_ok = MyWriter.writeSettings(Paths.get(fileName), file.getAbsolutePath(), prosent,
                        antNaboerEnvei, cliqueSize, absoluteValue, false);

                Integer numCliques = algorithim.getNumberOfCliques(cliqueSize);
                Integer antallNoder = algorithim.getNumNodes();
                Double gjennomsnitt = algorithim.getAverage();
                Integer numConnectedComponents = algorithim.getNumConnectedComponents();
                Integer numBridges = algorithim.getNumBridges();
                Integer numMissingDirectRelationships = algorithim.getNumMissingDirectNeighborRelationships();
                boolean results_ok = MyWriter.writeResults(Paths.get(fileName), numCliques, antallNoder, gjennomsnitt,
                        numConnectedComponents, numBridges, numMissingDirectRelationships, true);

                boolean summary_ok = MyWriter.writeShortSummary(Paths.get(fileName), antNaboerTilSummary,
                        localClusteringCoefficients, true);

                if (settings_ok & results_ok & summary_ok) {
                    statusNettverkLabel.setText("Status: File " + fileName + " created.");
                } else {
                    statusNettverkLabel.setText("<html><font color='red'>Error: File NOT created.</font></html>");
                }
            }
        }
    }// GEN-LAST:event_nettverkStatistikkButtonActionPerformed

    private void lagResultatfilButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_lagResultatfilButtonActionPerformed
        if (inputIsOK()) {
            for (int i = 0; i < selectedFiles.length; i++) {
                File file = selectedFiles[i];
                List<Integer> timeSeries = timeSeriesList.get(i);

                List<List<Integer>> tidsserier = new ArrayList<>();
                tidsserier.add(0, new ArrayList<>());
                for (int prs = 1; prs <= 100; ++prs) {
                    antNaboerEnvei = Integer.parseInt(antNaboerEnVeiTextField.getText());
                    final TimeseriesToGraph alg = new TimeseriesToGraph(timeSeries,
                            new ThresholdPercentage(Double.valueOf(prs)), antNaboerEnvei,
                            SimilarityDefinitions.SYMMETRIC);
                    tidsserier.add(prs, alg.getNumSimilarNeighbors());
                }

                statusNettverkLabel.setText("Status: Creating file(s) ...");

                int antNaboerEnVei = Integer.parseInt(antNaboerEnVeiTextField.getText());

                String filnavn = getUtdataFilnavn(file, "results", antNaboerEnVei);
                boolean ok = MyWriter.write(Paths.get(filnavn), tidsserier);

                if (ok) {
                    statusNettverkLabel.setText("Status: File " + filnavn + " created.");
                } else {
                    statusNettverkLabel.setText("<html><font color='red'>Error: File NOT created.</font></html>");
                }
            }
        }
    }// GEN-LAST:event_lagResultatfilButtonActionPerformed

    private void nettverkNullstillButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nettverkNullstillButtonActionPerformed
        valgtFilTextField.setText("");
        selectedFiles = null;
        prosentTextField.setText("1.5");
        absoluttverdiTextField.setText("");
        antNaboerEnVeiTextField.setText("2");
        cliqueSizeTextField.setText("3");
        antallNoderTextField.setText("");
        gjennomsnitttextField.setText("");
        numConnectedComponentsTextField.setText("");
        numBridgesTextField.setText("");
        numMissingDirectRelationshipsTextField.setText("");
        numCliquesTextField.setText("");
        statusNettverkLabel.setText("");
        lagResultatfilButton.setEnabled(false);
        nettverkStatistikkButton.setEnabled(false);
        tabularFileButton.setEnabled(false);

        thresholds.clear();
        algorithims.clear();
        timeSeriesList.clear();
    }// GEN-LAST:event_nettverkNullstillButtonActionPerformed

    private void gjennomsnitttextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gjennomsnitttextFieldActionPerformed

    }// GEN-LAST:event_gjennomsnitttextFieldActionPerformed

    private void prosentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_prosentTextFieldActionPerformed

    }// GEN-LAST:event_prosentTextFieldActionPerformed

    private void beregnButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_beregnButtonActionPerformed
        if (inputIsOK()) {
            for (int i = 0; i < selectedFiles.length; i++) {
                List<Integer> timeSeries = timeSeriesList.get(i);
                Threshold threshold;

                if (NumberUtils.isNumber(prosentTextField.getText())) {
                    prosent = Double.parseDouble(prosentTextField.getText());
                    threshold = new ThresholdPercentage(prosent);
                } else if (NumberUtils.isNumber(absoluttverdiTextField.getText())) {
                    absoluteValue = Integer.parseInt(absoluttverdiTextField.getText());
                    threshold = new ThresholdAbsoluteValue(absoluteValue);
                } else {
                    throw new IllegalStateException("Percentage is invalid and milliseconds is invalid");
                }
                thresholds.add(threshold);

                cliqueSize = Integer.parseInt(cliqueSizeTextField.getText());
                antNaboerEnvei = Integer.parseInt(antNaboerEnVeiTextField.getText());

                TimeseriesToGraph algorithim = new TimeseriesToGraph(timeSeries, threshold, antNaboerEnvei,
                        SimilarityDefinitions.SYMMETRIC);
                algorithims.add(algorithim);

                // Update text fields
                numCliquesTextField.setText(numCliquesTextField.getText()
                        + String.valueOf(algorithim.getNumberOfCliques(cliqueSize)) + ";");
                antallNoderTextField
                        .setText(antallNoderTextField.getText() + algorithim.getNumNodes().toString() + ";");
                gjennomsnitttextField
                        .setText(gjennomsnitttextField.getText() + algorithim.getAverage().toString() + ";");
                numConnectedComponentsTextField.setText(numConnectedComponentsTextField.getText()
                        + algorithim.getNumConnectedComponents().toString() + ";");
                numBridgesTextField
                        .setText(numBridgesTextField.getText() + algorithim.getNumBridges().toString() + ";");
                numMissingDirectRelationshipsTextField.setText(numMissingDirectRelationshipsTextField.getText()
                        + algorithim.getNumMissingDirectNeighborRelationships().toString() + ";");

            }
            // Calculation complete, enable buttons
            statusNettverkLabel.setText("Status: calculation complete.");
            nettverkStatistikkButton.setEnabled(true);
            lagResultatfilButton.setEnabled(true);
            tabularFileButton.setEnabled(true);
        }
    }// GEN-LAST:event_beregnButtonActionPerformed

    private void loadFile(File file) {
        try {
            List<Integer> timeSeries = MyReader.getTidsserie(file);
            timeSeriesList.add(timeSeries);
            System.out.println(file.getName());
            System.out.println(timeSeries.size());
        } catch (Exception e) {
            selectedFiles = null;
            timeSeriesList.clear();
            statusNettverkLabel.setText("<html><font color='red'>Error: error reading time series</font></html>");
        }
    }

    private void velgInputfilButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_velgInputfilButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.showOpenDialog(this);
        selectedFiles = chooser.getSelectedFiles();

        thresholds.clear();
        algorithims.clear();
        timeSeriesList.clear();

        // Read time series into list of time series lists
        boolean successfulRead = true;
        for (File file : selectedFiles) {
            loadFile(file);
        }

        if (successfulRead) {
            // Set text in selected file(s) box
            switch (selectedFiles.length) {
                case 1:
                    valgtFilTextField.setText(selectedFiles[0].getAbsolutePath());
                    break;
                case 0:
                    valgtFilTextField.setText("");
                    break;
                default:
                    valgtFilTextField.setText(String.format("Multiple files (%d)", selectedFiles.length));
                    break;
            }
        }

    }// GEN-LAST:event_velgInputfilButtonActionPerformed

    private void tabularFileButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tabularFileButtonActionPerformed

        if (inputIsOK()) {
            // Count max number of nodes, inefficient but not worth optimizing at this stage
            int maxNeighborsInAllFiles = 0;
            for (TimeseriesToGraph algorithim : algorithims) {
                int neighborCount = algorithim.getNumNeighborsToSummary().size();
                maxNeighborsInAllFiles = Math.max(neighborCount, maxNeighborsInAllFiles);
            }

            File firstFile = selectedFiles[0];
            final Path outputFileName = Paths.get(firstFile.getParent(), "output",
                    firstFile.getName() + "_tabular_output.txt");

            boolean header_ok = MyWriter.writeTabularHeader(outputFileName, maxNeighborsInAllFiles);

            for (int i = 0; i < selectedFiles.length; i++) {
                File file = selectedFiles[i];
                TimeseriesToGraph algorithim = algorithims.get(i);
                Threshold threshold = thresholds.get(i);

                final Map<Integer, Summary> antNaboerTilSummary = algorithim.getNumNeighborsToSummary();
                final List<BigDecimal> localClusteringCoefficients = algorithim.getLocalClusteringCoefficients();

                final int antNaboerEnVei = Integer.parseInt(antNaboerEnVeiTextField.getText());

                Integer numCliques = algorithim.getNumberOfCliques(cliqueSize);
                Integer antallNoder = algorithim.getNumNodes();
                Double gjennomsnitt = algorithim.getAverage();
                Integer numConnectedComponents = algorithim.getNumConnectedComponents();
                Integer numBridges = algorithim.getNumBridges();
                Integer numMissingDirectRelationships = algorithim.getNumMissingDirectNeighborRelationships();

                boolean tabular_ok = MyWriter.writeTabularLine(outputFileName, file.getAbsolutePath(), prosent,
                        antNaboerEnVei, cliqueSize, absoluteValue, numCliques, antallNoder, gjennomsnitt,
                        numConnectedComponents, numBridges, numMissingDirectRelationships, antNaboerTilSummary,
                        localClusteringCoefficients, maxNeighborsInAllFiles);

                if (header_ok & tabular_ok) {
                    statusNettverkLabel.setText("Status: File " + outputFileName + " created.");
                } else {
                    statusNettverkLabel.setText("<html><font color='red'>Error: File NOT created.</font></html>");
                }
            }
        }
    }// GEN-LAST:event_tabularFileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MainFrame mainFrame = new MainFrame();

            // Create Options object
            Options options = new Options();

            // Add options
            options.addOption("f", "filepath", true, "File path to process");
            options.addOption("n", "numNeighbours", true, "Number of neighbours");
            options.addOption("c", "cliqueSize", true, "Clique size");
            options.addOption("p", "similarityThresholdPercent", true, "Similarity threshold percent");
            options.addOption("a", "similarityThresholdAbsolute", true, "Similarity threshold absolute");
            options.addOption("gui", false, "Run the program with a GUI");

            // Create a parser
            CommandLineParser parser = new DefaultParser();

            try {
                // Parse the command line arguments
                CommandLine cmd = parser.parse(options, args);

                // Get and use the parsed options
                String filepath = cmd.getOptionValue("filepath");
                int numNeighbours = cmd.hasOption("numNeighbours")
                        ? Integer.parseInt(cmd.getOptionValue("numNeighbours"))
                        : -1;
                int cliqueSize = cmd.hasOption("cliqueSize") ? Integer.parseInt(cmd.getOptionValue("cliqueSize"))
                        : -1;
                double similarityThresholdPercent = cmd.hasOption("similarityThresholdPercent")
                        ? Double.parseDouble(cmd.getOptionValue("similarityThresholdPercent"))
                        : -1;
                double similarityThresholdAbsolute = cmd.hasOption("similarityThresholdAbsolute")
                        ? Double.parseDouble(cmd.getOptionValue("similarityThresholdAbsolute"))
                        : -1;

                // Check if either similarityThresholdPercent or similarityThresholdAbsolute is
                // provided
                if (similarityThresholdPercent == -1 && similarityThresholdAbsolute == -1 && args.length > 0) {
                    throw new ParseException(
                            "Either similarity threshold percent or similarity threshold absolute must be provided");
                }

                if (args.length > 0) {
                    // Get and use the parsed options
                    // ...

                    // Use the parsed options
                    File file = new File(filepath);
                    mainFrame.thresholds.clear();
                    mainFrame.algorithims.clear();
                    mainFrame.timeSeriesList.clear();
                    mainFrame.selectedFiles = new File[] { file };
                    mainFrame.loadFile(file);
                    mainFrame.valgtFilTextField.setText(file.getAbsolutePath());
                }

                // If no arguments provided or if the gui option is provided then show the GUI
                if (args.length == 0 || cmd.hasOption("gui")) {
                    mainFrame.setVisible(true);
                }

            } catch (ParseException e) {
                System.out.println("Invalid command line arguments: " + e.getMessage());
                HelpFormatter formatter = new HelpFormatter();
                formatter.printHelp("java -jar yourprogram.jar", options);
            }
        });
    }

    private String getNettverkStatistikkUtdataFilnavn(File file, Integer antNaboerTilHoyre, Threshold threshold) {
        String absolutePath = file.getAbsolutePath();
        String navn = file.getName();
        navn = navn.substring(0, navn.lastIndexOf("."));
        String resultatPath = absolutePath.substring(0, absolutePath.lastIndexOf(File.separator));
        String resultatFilNavn = resultatPath + File.separator + "output" + File.separator + navn
                + "_network_statistics_numNeighbors_" + antNaboerTilHoyre.toString();
        if (threshold.getThresholdType() == ThresholdType.ABSOLUTE_VALUE) {
            resultatFilNavn += "_absolute_" + threshold.getRawInput() + ".txt";
        } else {
            resultatFilNavn += "_percent_" + threshold.getRawInput() + ".txt";
        }
        return resultatFilNavn;
    }

    private String getUtdataFilnavn(File file, String extension, Integer antNaboerEnVei) {
        String absolutePath = file.getAbsolutePath();
        String navn = file.getName();
        navn = navn.substring(0, navn.lastIndexOf("."));
        String resultatPath = absolutePath.substring(0, absolutePath.lastIndexOf(File.separator));
        if (antNaboerEnVei != null) { // nettverk
            String resultatFilNavn = resultatPath + File.separator + "output" + File.separator + navn
                    + "_numNeighborsOneWay" + antNaboerEnVei + "_" + extension + ".txt";
            return resultatFilNavn;
        } else { // symboldynamikk
            String resultatFilNavn = resultatPath + File.separator + "output" + File.separator + navn + "_" + extension
                    + ".txt";
            return resultatFilNavn;
        }
    }

    private boolean inputIsOK() {

        if (timeSeriesList == null) {
            statusNettverkLabel.setText("<html><font color='red'>Error: no time series found</font></html>");
            return false;
        }

        if (!NumberUtils.isNumber(prosentTextField.getText())
                && !NumberUtils.isNumber(absoluttverdiTextField.getText())) {
            statusNettverkLabel
                    .setText("<html><font color='red'>Error: no threshold entered or formatting error</font></html>");
            return false;
        }

        // Percent ovverides absolute so can't have both
        if (NumberUtils.isNumber(prosentTextField.getText())
                && NumberUtils.isNumber(absoluttverdiTextField.getText())) {
            statusNettverkLabel.setText(
                    "<html><font color='red'>Error: can't have both percent and absolute threshold</font></html>");
            return false;
        }

        String tempAntNaboerEnvei = antNaboerEnVeiTextField.getText();

        if (tempAntNaboerEnvei == null) {
            statusNettverkLabel.setText(
                    "<html><font color='red'>Error: no num neighbours entered or formatting error</font></html>");
            return false;
        }

        if (StringUtils.isBlank(tempAntNaboerEnvei)) {
            statusNettverkLabel.setText(
                    "<html><font color='red'>Error: no num neighbours entered or formatting error</font></html>");
            return false;
        }

        try {
            Integer.parseInt(tempAntNaboerEnvei);
        } catch (NumberFormatException e) {
            statusNettverkLabel.setText(
                    "<html><font color='red'>Error: no num neighbours entered or formatting error</font></html>");
            return false;
        }

        final String cliqueSizeStr = cliqueSizeTextField.getText();

        if (cliqueSizeStr == null || StringUtils.isBlank(cliqueSizeStr)) {
            statusNettverkLabel
                    .setText("<html><font color='red'>Error: no clique size entered or formatting error</font></html>");
            return false;
        }

        try {
            Integer.parseInt(cliqueSizeStr);
        } catch (NumberFormatException e) {
            statusNettverkLabel
                    .setText("<html><font color='red'>Error: no clique size entered or formatting error</font></html>");
            return false;
        }

        if (selectedFiles == null) {
            statusNettverkLabel.setText("<html><font color='red'>Error: no files selected</font></html>");
            return false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel absoluttverdiLabel;
    private javax.swing.JTextField absoluttverdiTextField;
    private javax.swing.JLabel antNaboerEnVeiLabel;
    private javax.swing.JTextField antNaboerEnVeiTextField;
    private javax.swing.JLabel antallNoderLabel;
    private javax.swing.JTextField antallNoderTextField;
    private javax.swing.JButton beregnButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel cliqueSizeLabel;
    private javax.swing.JTextField cliqueSizeTextField;
    private javax.swing.JLabel gjennomsnittLabel;
    private javax.swing.JTextField gjennomsnitttextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton lagResultatfilButton;
    private javax.swing.JButton nettverkNullstillButton;
    private javax.swing.JButton nettverkStatistikkButton;
    private javax.swing.JPanel noderPanel;
    private javax.swing.JLabel numBridgesLabel;
    private javax.swing.JTextField numBridgesTextField;
    private javax.swing.JLabel numCliquesLabel;
    private javax.swing.JTextField numCliquesTextField;
    private javax.swing.JLabel numConnectedComponentsLabel;
    private javax.swing.JTextField numConnectedComponentsTextField;
    private javax.swing.JTextField numMissingDirectRelationshipsTextField;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JLabel prosentLabel;
    private javax.swing.JTextField prosentTextField;
    private javax.swing.JPanel resultaterPanel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel statusNettverkLabel;
    private javax.swing.JButton tabularFileButton;
    private javax.swing.JTextField valgtFilTextField;
    private javax.swing.JButton velgInputfilButton;
    private javax.swing.JTabbedPane visibilityGraphtabbedPane;
    // End of variables declaration//GEN-END:variables
}
